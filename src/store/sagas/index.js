import { call, takeLatest } from "redux-saga/effects";
import * as types from '../actions/types'
import campus from "./campus/campus";
import category from "./category/category";
import checksElegant from "./checksElegant/checksElegant";
import checksCreate from "./checksElegant/create";
import comment from "./comment/comment";
import elegant from "./elegant/elegant";
import active from "./mail/active";
import code from "./mail/code";
import messageCreate from "./message/create";
import to from "./message/to";
import messageUser from "./message/user";
import react from "./react/react";
import all from "./share/all";
import shareCampus from "./share/campus";
import shareCategory from "./share/category";
import shareCreate from "./share/create";
import shareUser from "./share/user";
import changeEmail from "./user/chageEmail";
import changePassword from "./user/changPassword";
import checks from "./user/check";
import userCreate from "./user/create";
import search from "./user/search";
import token from "./user/token";
export default function* sagas() {
    yield takeLatest(types.CAMPUS_REQUEST,campus);
    yield takeLatest(types.CATEGORY_REQUEST,category);
    yield takeLatest(types.CATEGORY_REQUEST,checksElegant);
    yield takeLatest(types.CATEGORY_REQUEST,checksCreate);
    yield takeLatest(types.CATEGORY_REQUEST,comment);
    yield takeLatest(types.CATEGORY_REQUEST,elegant);
    yield takeLatest(types.CATEGORY_REQUEST,active);
    yield takeLatest(types.CATEGORY_REQUEST,code);
    yield takeLatest(types.CATEGORY_REQUEST,messageCreate);
    yield takeLatest(types.CATEGORY_REQUEST,to);
    yield takeLatest(types.CATEGORY_REQUEST,messageUser);
    yield takeLatest(types.CATEGORY_REQUEST,react);
    yield takeLatest(types.CATEGORY_REQUEST,all);
    yield takeLatest(types.CATEGORY_REQUEST,shareCampus);
    yield takeLatest(types.CATEGORY_REQUEST,shareCategory);
    yield takeLatest(types.CATEGORY_REQUEST,shareCreate);
    yield takeLatest(types.CATEGORY_REQUEST,shareUser);
    yield takeLatest(types.CATEGORY_REQUEST,changeEmail);
    yield takeLatest(types.CATEGORY_REQUEST,changePassword);
    yield takeLatest(types.CATEGORY_REQUEST,checks);
    yield takeLatest(types.CATEGORY_REQUEST,userCreate);
    yield takeLatest(types.CATEGORY_REQUEST,search);
    yield takeLatest(types.CATEGORY_REQUEST,token);
}